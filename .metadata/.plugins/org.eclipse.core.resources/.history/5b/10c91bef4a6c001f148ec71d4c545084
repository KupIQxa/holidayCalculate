package com.example.holidayCalculate.controller;

import com.example.holidayCalculate.dto.VacationPayResponse;
import com.example.holidayCalculate.service.HolidayService;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.time.LocalDate;
import java.util.List;
import java.util.stream.Collectors;

@RestController
public class HolidayCalculatorController {

    private final HolidayService holidayService;

    public HolidayCalculatorController(HolidayService holidayService) {
        this.holidayService = holidayService;
    }

    @GetMapping("/calculate")
    public VacationPayResponse calculateVacationPay(@RequestParam double averageSalary, @RequestParam int vacationDays, 
                                       @RequestParam(required = false) List<String> vacationDates) {
        double dailyRate = averageSalary / 29.3;  
        
        if (vacationDates == null || vacationDates.isEmpty()) {
            double totalPay = dailyRate * vacationDays;
            return new VacationPayResponse(totalPay, dailyRate, vacationDays, null);
        } else {
            List<LocalDate> dates = vacationDates.stream()
                                    .map(LocalDate::parse)
                                    .collect(Collectors.toList());

            List<LocalDate> paidDates = dates.stream()
                                              .filter(holidayService::isWorkingDay)
                                              .collect(Collectors.toList());

            long paidDays = paidDates.size();
            double totalPay = dailyRate * paidDays;

            return new VacationPayResponse(
                    totalPay,
                    dailyRate,
                    paidDays,
                    paidDates.stream().map(LocalDate::toString).collect(Collectors.toList())
            );
        }
    }
}
